@{
    ViewBag.Title = "Index";
}
<link href="~/Content/jquery.mobile-1.3.1.min.css" rel="stylesheet" />
<style>

    .my-breakpoint>div {
	padding: 10px;
    }
    .my-breakpoint a {
	    text-decoration:none;
    }

    .orderTitle {
	    text-align: center;
    }
   #ordersGrid .ui-link:visited {
       color: #3e3e3e;
    }
    #ordersGrid .ui-link {
        color: #3e3e3e;
    }
</style>

<script src="../bundles/jquery"></script>
<script src="../bundles/jquerycolor"></script>
<script src="~/Scripts/jquery.mobile-1.3.1.min.js"></script>
<script src="../bundles/knockout"></script>
<script src="../Scripts/jquery.signalR-1.1.2.js"></script>
<script src="../signalr/hubs"></script>
<script src="~/signalr/hubs"></script>


<script>

    ko.bindingHandlers.jqmRefreshSelect = {
        update: function (element, valueAccessor) {
            ko.utils.unwrapObservable(valueAccessor()); //just to create a dependency
            try {
                if (!$(element).parent().parent().hasClass("ui-select"))
                    $(element).selectmenu("refresh");
            } catch (e) {
                console.log(e);
            }
        }
        ,
        init: function (element, valueAccessor, allBindingsAccessor) {
            ko.utils.unwrapObservable(valueAccessor()); //just to create a dependency
            try {
                if(!$(element).parent().parent().hasClass("ui-select"))
                    $(element).selectmenu();
            } catch (e) {
                console.log(e);
            }
        }
    };


    (function(){
        var defaultPrice = 1.8;
        var prices = {
            "Bier": defaultPrice,
            "Cola": defaultPrice,
            "Water": defaultPrice
        };
        var orderItem = function (d,parent) {
            var that = {};
            that.name = ko.observable(d.name || "");
            that.quantity = ko.observable(d.quantiy || 0);

            that.name.subscribe(function () { parent.calculatePrice(); });
            that.quantity.subscribe(function () { parent.calculatePrice(); });

            return that;
        }
        var order = function (d) {
            var that = {};

            var theItems = [orderItem({ quantity: 0, name: "" },that)];
            if (d.items) {
                theItems=ko.utils.arrayMap(d.items, function (item) {
                    return new orderItem(item,that);
                });
            }

            that.tableId = ko.observable(d.tableId || 1);
            that.id = d.id;
            that.items = ko.observableArray(theItems);
            that.addEmptyOrderItem = function () {
                that.items.push(orderItem({ quantity: 0, name: "" }, that));
            }
            that.price = ko.observable(0);
            that.calculatePrice = function () {
                var items = that.items();
                var totalPrice = 0;
                ko.utils.arrayForEach(items, function (i) {
                    var price = prices[i.name()];
                    var amount = i.quantity();
                    if (price)
                        totalPrice += price * amount;
                });
                that.price( totalPrice);
            }
            that.items.subscribe(function () {
                that.calculatePrice();
            });
            return that;
        };
        var viewmodel = function (hub) {
            var that = {};

            that.orders = ko.observableArray([]);
            that.newOrder = ko.observable(order({ tableId: "", items: null }));
            that.selectedOrder = ko.observable();
            that.orderCountFromServer = ko.observable();
            that.drinks = ko.observableArray(['','Bier', 'Cola', 'Water']);
            that.resetNewOrder = function () {
                $("#drinksContainer .ui-select").remove();
                $("#drinksContainer input").unwrap();
                that.newOrder().items([]);
                that.newOrder(order({}));
            };
            that.saveNewOrder = function () {
                var order = ko.toJS(that.newOrder());
                console.log(order);
                hub.server.addOrder(order).done(function(orderCount){
                    that.orderCountFromServer(orderCount);
                });
            };
            that.removeSelected = function () {
                var selectedOrder = that.selectedOrder();
                hub.server.removeOrder(selectedOrder.Id).done(function(orderCount){
                    that.orderCountFromServer(orderCount);
                    that.orders.remove(selectedOrder);
                });
                return true;
            };
            return that;
        }
    

 

        $(function () {
            var orderManager = $.connection.orderManager;
            var vm = viewmodel(orderManager);

            $("#ordersGrid").delegate("a", "click", function () {
                var order = ko.dataFor(this);
                vm.selectedOrder(order);
                $("#changeStatePopup").popup("open");
                return false;
            });

            function init() {
                return orderManager.server.getNotPaidOrders();
            }

            // Add client-side hub methods that the server will call
            $.extend(orderManager.client, {
                incomingOrder:function(d){
                
                    vm.orders.push(d);
                }

            });

            // Start the connection
            $.connection.hub.start()
                .pipe(init)
                .done(function (orders) {

                    console.log(orders);
                    vm.orders(orders);

                });

            ko.applyBindings(vm);



        });
    })()
</script>



<div data-role="page" id="CreateOrder">

    <div data-role="header">
        <h1>Nieuwe bestelling</h1>
         <a href="#Overview" data-icon="bars">Overzicht</a>
    </div>

    <div data-role="content">

            <form data-bind="with:newOrder">
                 <div data-role="fieldcontain">
                    <label for="tableNumberInput">Tafel nummer</label>
                    <input type="text" name="textinput-fc" id="tableNumberInput" placeholder="Tafel nummer" value="" data-bind="value:tableId">
                </div>
                <div id="drinksContainer">
                    <!-- ko foreach:items -->
                        <div class="ui-grid-a">
                             <div class="ui-block-a">
                                 <input type="text" data-bind="attr:{'id':'drinksQuantity'+$index()},value:quantity"/>
                            </div>
                            <div class="ui-block-b">
                                <select data-bind="options:$root.drinks,value: name,jqmRefreshSelect:$root.drinks,attr:{'id':'drinksSelect'+$index()}"></select>
                            </div>
                        </div>
                    <!-- /ko --> 

                </div>



                <a href="#" data-role="button" data-inline="true" data-icon="plus" data-bind="click: addEmptyOrderItem">Extra item</a>

                <div data-role="fieldcontain">
                    <label for="priceDisplay">Totaal </label>
                    <span data-bind="text:price" id="priceDisplay"></span> EUR
                </div>
            </form>
    </div>
    <div data-role="footer" data-position="fixed">
        <div data-role="navbar">
			<ul>
				<li>
                    <a href="#" data-role="button" data-icon="delete" data-theme="b" data-bind="click: resetNewOrder">Annuleren</a>
				</li>
				<li>
                    <a href="#" data-role="button" data-icon="plus" data-theme="b" data-bind="click: saveNewOrder">Bestellen!</a>
				</li>
			</ul>
		</div>
    </div>

</div>


<div data-role="page" id="Overview">
  <div data-role="header">
    <h1>Bestellingen   <span data-bind="text:orderCountFromServer"></span> </h1>
    <a href="#CreateOrder" data-icon="bars">Bestellen</a>
  </div>
  <div data-role="content">

       	<div data-role="popup" id="changeStatePopup" data-position-to="window" data-overlay-theme="a" class="ui-content" >
              
               <div data-bind="if:selectedOrder">
                 Tafel <span data-bind="text:selectedOrder().TableId"></span>
                </div> 
			    <a href="#" data-rel="back" data-role="button" data-theme="c" data-icon="delete" data-iconpos="notext" class="ui-btn-right">Sluiten</a>
			
			    <a href="#" data-role="button" data-icon="delete" data-iconpos="left" data-rel="back" id="removeOrderButton" data-theme="e" data-bind="click:removeSelected">Verwijderen</a>

                <a href="#" data-role="button" data-icon="delete" data-iconpos="left" data-rel="back" id="changeToReadyButton" data-theme="e">Aanduiden als klaar</a>
               

		</div>
      	<script type="text/html" id="order-template">
			<a class="ui-corner-all ui-bar ui-bar-c"  href="#">
				<div class="orderTitle">
				    Tafel <span data-bind="text:TableId"></span>
				</div>   
				<div data-bind="foreach:Items" >
                    <span data-bind="text:Quantity"></span> <span data-bind="text:Name"></span><br />
				</div>
			</a>
		</script>
		<div class="ui-grid-c my-breakpoint" data-bind="foreach: orders" id="ordersGrid">
			<!-- ko if: $index()%4===0 -->
			<div class="ui-block-a">
				<div data-bind="template: { name: 'order-template', data: $data }"></div>	
			</div>
			<!-- /ko --> 
			<!-- ko if: $index()%4===1 -->
			<div class="ui-block-b">
				<div data-bind="template: { name: 'order-template', data: $data }"></div>	
			</div>
			<!-- /ko --> 			 
			<!-- ko if: $index()%4===2-->
			<div class="ui-block-c">
				<div data-bind="template: { name: 'order-template', data: $data }"></div>	
			</div>
			<!-- /ko --> 				 
			<!-- ko if: $index()%4===3-->
			<div class="ui-block-d">
				<div data-bind="template: { name: 'order-template', data: $data }"></div>	
			</div>
			<!-- /ko --> 					
		</div>

       

  </div>
    <div data-role="footer" data-position="fixed">
        <div data-role="navbar">
			<ul>
				<li>
                    <a href="#" data-role="button" data-icon="delete" data-theme="b" data-bind="click: resetNewOrder" class="ui-btn-active ui-state-persist">Actief</a>
				</li>
				<li>
                    <a href="#" data-role="button" data-icon="plus" data-theme="b" data-bind="click: saveNewOrder">Klaar</a>
				</li>
			</ul>
		</div>
    </div>
</div>







